print(main_p + scale_fill_brewer(palette = paleta) + ggtitle(paleta))
})
# Palettas
par(mfrow = c(2, 2))
paletas <- c('Set3', 'Paired', 'Spectral', 'PiYG')
sapply(paletas, function(paleta) {
print(main_p + scale_fill_brewer(palette = paleta) + ggtitle(paleta))
})
par(mfrow = c(2,2))
plot(c(1,2,3), c(3,2,1))
plot(c(1,2,3), c(3,2,1))
par(mfrow = c(2, 2))
sapply(paletas, function(paleta) {
main_p + scale_fill_brewer(palette = paleta) + ggtitle(paleta)
})
plots_l <- list()
sapply(paletas, function(paleta) {
plots_l[[paleta]] <- main_p + scale_fill_brewer(palette = paleta) + ggtitle(paleta)
})
plots_l
plots_l <- list()
paleta <- paletas[1]
plots_l[[paleta]] <- main_p + scale_fill_brewer(palette = paleta) + ggtitle(paleta)
plots_l
plots_l <- lapply(paletas, function(paleta) {
main_p + scale_fill_brewer(palette = paleta) + ggtitle(paleta)
})
plots_l
par(mfrow = c(2, 2))
plots_l
library(gridExtra)
# Grid
n <- length(plist)
nCol <- floor(sqrt(n))
# Grid
n <- length(plots_l)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(plots_l, ncol=nCol))
# Paletas Viridis
options <- c('A', 'B')
plots_v <- lapply(options, function(option_i) {
})
plots_v
option_i <- 'A?'
option_i <- 'A'
main_p + scale_fill_viridis(option = option_i) + ggtitle(paste0('Viridis ', option)
})
main_p + scale_fill_viridis(option = option_i) + ggtitle(paste0('Viridis ', option))
?scale_fill_viridis
main_p + scale_fill_viridis(option = option_i) + ggtitle(paste0('Viridis ', option_i))
plots_v <- lapply(options, function(option_i) {
main_p + scale_fill_viridis(option = option_i, discrete = T) + ggtitle(paste0('Viridis ', option_i))
})
plots_v
# Final list
plots_f <- rbind(plots_l, plots_v)
# Grid
n <- length(plots_f)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(plots_f, ncol=nCol))
?grid.arrange
floor(sqrt(n))
plots_v <- lapply(options, function(option_i) {
main_p + scale_fill_viridis(option = option_i, discrete = T) + ggtitle(paste0('Viridis ', option_i))
})
plots_v[[2]]
plots_v[[1]]
length(plots_f)
# Grid
n <- length(plots_f)
nCol <- floor(sqrt(n))
nCol
paletas <- c('Set3', 'Paired', 'Spectral', 'PiYG')
plots_l <- lapply(paletas, function(paleta) {
main_p + scale_fill_brewer(palette = paleta) + ggtitle(paleta)
})
# Paletas Viridis
options <- c('A', 'D')
plots_v <- lapply(options, function(option_i) {
main_p + scale_fill_viridis(option = option_i, discrete = T) + ggtitle(paste0('Viridis ', option_i))
})
# Final list
plots_f <- rbind(plots_l, plots_v)
length(plots_f)
length(plots_l)
length(plots_v)
?rbind
# Final list
plots_f <- list(plots_l, plots_v)
length(plots_f)
# Final list
plots_f <- c(plots_l, plots_v)
length(plots_f)
class(plots_f)
# Grid
n <- length(plots_f)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(plots_f, ncol=nCol))
own_paleta <- c('#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087', '#f95d6a', '#ff7c43', '#ffa600', '#51D231')
# Others
pg <- main_p + scale_fill_grey(start = 0.8, end = 0.2) + ggtitle('Gray Scale')
p_own <- main_p + scale_fill_manual(values = own_paleta) + ggtitle('Own')
plots_r <- list(pg, p_own)
# Final list
plots_f <- c(plots_l, plots_v, plots_r)
# Grid
n <- length(plots_f)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(plots_f, ncol=nCol))
main_p + scale_fill_grey(start = 0.8, end = 0.2) + ggtitle('Gray Scale')
main_p + scale_fill_manual(values = own_paleta) + ggtitle('Own')
own_paleta <- c('#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087', '#f95d6a', '#ff7c43', '#ffa600', '#51D231', 'A1DC15')
own_paletta <- c('#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087', '#f95d6a', '#ff7c43', '#ffa600', '#51D231', 'A1DC15')
main_p + scale_fill_manual(values = own_paletta) + ggtitle('Own')
own_paletta <- c('#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087', '#f95d6a', '#ff7c43', '#ffa600', '#51D231', '#A1DC15')
main_p + scale_fill_manual(values = own_paletta) + ggtitle('Own')
# Others
pg <- main_p + scale_fill_grey(start = 0.8, end = 0.2) + ggtitle('Gray Scale')
p_own <- main_p + scale_fill_manual(values = own_paletta) + ggtitle('Own')
plots_r <- list(pg, p_own)
# Final list
plots_f <- c(plots_l, plots_v, plots_r)
# Grid
n <- length(plots_f)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(plots_f, ncol=nCol))
pgrid <- do.call("grid.arrange", c(plots_f, ncol=nCol))
pgrid + labs(title = 'Palette Comparison', caption = 'By Xisca Pe')
class(pgrid)
do.call("grid.arrange", c(plots_f, ncol=nCol)) + labs(title = 'Palette Comparison', caption = 'By Xisca Pe')
do.call("grid.arrange", c(plots_f, ncol=nCol, top = 'Comparacion paletas'))
do.call("grid.arrange", c(plots_f, ncol=nCol, top = textGrob("Comparacion de paletas",gp=gpar(fontsize=20,font=3))
)
)
library(gridExtra)
do.call("grid.arrange", c(plots_f, ncol=nCol,
top = textGrob("Comparacion de paletas",gp=gpar(fontsize=20,font=3))))
library(grid)
?textGrob
do.call("grid.arrange", c(plots_f, ncol=nCol,
top = textGrob("Comparacion de paletas",gp=gpar(fontsize=20,font=3))))
do.call("grid.arrange",
c(plots_f, ncol=nCol, main = textGrob("Comparacion de paletas", gp=gpar(fontsize=20,font=3))))
do.call("grid.arrange", c(plots_f, ncol=nCol))
setwd("~/Desktop/graph_challenge/day_11")
# Packages ----------------------------------------------------------------
library(data.table)
library(ggplot2)
# Data --------------------------------------------------------------------
temp_bcn <- fread('2019_x2_barcelona_zoo.csv')
temp_bcn
temp_bcn[, date := lubridate::dmy(DATA_LECTURA)]
temp_bcn
temp_bcn[, .N, by = year(date)]
temp_bcn[, `:=` (
dia = day(date),
mes = month(date),
year = year(date)
)]
?day
lubridate::day()
temp_bcn[, `:=` (
dia = lubridate::day(date),
mes = month(date),
year = year(date)
)]
temp_bcn
temp_bcn[year == '2019']
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'], aes(x = day, y = hour, fill = 'TM')) +
geom_tile()
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'], aes(x = dia, y = mes, fill = 'TM')) +
geom_tile()
?month
data.table::month(lubridate::today())
data.table::month(lubridate::today(), lab = T)
data.table::month(lubridate::today())
data.table::months(lubridate::today())
lubridate::month(lubridate::today())
?lubridate::month
lubridate::month(lubridate::today())
lubridate::month(lubridate::today(), label = T )
lubridate::month(lubridate::today(), label = T, abbr = F)
temp_bcn[, `:=` (
dia = as.factor(lubridate::day(date)),
mes = as.factor(lubridate::month(date, label = T, abbr = F)),
year = as.factor(year(date))
)]
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'], aes(x = dia, y = mes, fill = 'TM')) +
geom_tile()
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'], aes(x = mes, y = dia, fill = 'TM')) +
geom_tile()
temp_bcn
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'], aes(x = mes, y = dia, fill = TM)) +
geom_tile()
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'], aes(x = mes, y = dia, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C")
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'][-dia], aes(x = mes, y = dia, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C")
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'][-date], aes(x = mes, y = dia, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C")
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'][order(-date)], aes(x = mes, y = dia, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C")
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'], aes(x = mes, y = dia, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
scale_y_reverse()
# Data --------------------------------------------------------------------
temp_bcn <- fread('2019_x2_barcelona_zoo.csv')
temp_bcn[, date := lubridate::dmy(DATA_LECTURA)]
temp_bcn[, `:=` (
dia = lubridate::day(date),
mes = as.factor(lubridate::month(date, label = T, abbr = F)),
year = as.factor(year(date))
)]
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year == '2019'], aes(x = mes, y = dia, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
scale_y_reverse()
temp_bcn[year == '2019'],
temp_bcn[year == '2019']
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2019, 2018)], aes(x = mes, y = dia, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(year~month)
# Data --------------------------------------------------------------------
temp_bcn <- fread('2019_x2_barcelona_zoo.csv')
temp_bcn[, date := lubridate::dmy(DATA_LECTURA)]
temp_bcn[, `:=` (
day = lubridate::day(date),
month = as.factor(lubridate::month(date, label = T, abbr = F)),
year = as.factor(year(date))
)]
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2019, 2018)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(year~month)
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2019, 2018)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year)
temp_bcn
temp_bcn[, unique(Year)]
temp_bcn[, unique(year)]
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year)
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) + scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)])
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'bottom', axis.text.x = element_text(angle = 45))
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'bottom', axis.text.x = element_text(angle = 45, vjust = 5))
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'bottom', axis.text.x = element_text(angle = 45, vjust = -2),
panel.background = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'bottom', axis.text.x = element_text(angle = 45, vjust = -0.5),
strip.background = element_rect(colour="white"))
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'bottom', axis.text.x = element_text(angle = 45, vjust = -0.1),
strip.background = element_rect(colour="white"))
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'bottom', axis.text.x = element_text(angle = 45, vjust = -0.01),
strip.background = element_rect(colour="white"))
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'bottom', axis.text.x = element_text(angle = 45, vjust = 0),
strip.background = element_rect(colour="white"))
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'bottom', axis.text.x = element_text(angle = 45, vjust = 0),
axis.title.x = element_text(hjust = -0.2),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 0),
axis.title.x = element_text(hjust = -0.2),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 0),
axis.title.x = element_text(vjust = -0.2),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 0),
axis.title.x = element_text(vjust = -0.5),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 0),
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45),
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = -0.1),
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right', axis.text.x = element_text(angle = 45, vjust = -0.1),
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right', axis.text.x = element_text(angle = 45, vjust = -0.1),
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right', axis.text.x = element_text(angle = 45, vjust = -0.1),
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right', axis.text.x = element_text(angle = 45),
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right',
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = day, y = month, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right',
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = day, y = month, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
#scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right',
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right',
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank())
# Graph -------------------------------------------------------------------
ggplot(temp_bcn[year %in% c(2016, 2017, 2018, 2019)], aes(x = month, y = day, fill = TM)) +
geom_tile(color= "white",size=0.1) +
scale_fill_viridis(name="Hrly Temps C",option ="C") +
facet_grid(~year) +
scale_y_continuous(trans = "reverse", breaks = temp_bcn[, unique(day)]) +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
theme_bw() + labs(title = 'Temperatura BCN 2016-2019', caption = 'By Xisca Pe') +
xlab('Mes') + ylab('Dia') +
theme(legend.position = 'right',
axis.title.x = element_text(vjust = -1),
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20))
# Packages ----------------------------------------------------------------
library(data.table)
library(ggplot2)
