library(RPostgres)
con <- dbConnect(RPostgres::Postgres())
con
dbListTables(con)
con <- dbConnect(RPostgres::Postgres())
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
dbDisconnect(con)
con <- dbConnect(RPostgres::Postgres(),dbname = dbconfiguration$redshift.traffic$dbname,
host = dbconfiguration$redshift.traffic$dbhost,
port = dbconfiguration$redshift.traffic$dbport
user = .redshift.db.user
password = .redshift.db.pass)
con <- dbConnect(RPostgres::Postgres(),dbname = dbconfiguration$redshift.traffic$dbname,
host = dbconfiguration$redshift.traffic$dbhost,
port = dbconfiguration$redshift.traffic$dbport,
user = .redshift.db.user,
password = .redshift.db.pass)
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
dbListFields(con, "xisca_fishing")
xisca.fish <- dbReadTable(con, "xisca_fishing")
xisca.fish
system.time({
res <- dbSendQuery(con, "SELECT * FROM transactions_traffic_table limit 1000")
tt <- dbFetch(res)
dbClearResult(res)
})
tt
tt <- as.data.table(tt)
library(data.table)
tt <- as.data.table(tt)
tt
system.time({
res <- dbSendQuery(con, "SELECT * FROM transactions_traffic_table limit 1000")
tt <- dbFetch(res)
dbClearResult(res)
})
dbname <- dbconfiguration[[db]]$dbname
host <- dbconfiguration[[db]]$dbhost
db <- 'redshift.traffic'
dbname <- dbconfiguration[[db]]$dbname
host <- dbconfiguration[[db]]$dbhost
port <- dbconfiguration[[db]]$dbport
drv <- dbDriver("PostgreSQL")
library(DBI)
drv <- dbDriver("PostgreSQL")
data(esoph)
esoph
table(agegp, ncases)
detach(esoph)
esopg
library(data.table)
esoph <- as.data.table(esoph)
esoph
esoph[, table(agegp, ncases)]
boxplot(ncases/(ncases + ncontrols) ~ agegp)
esoph[,boxplot(ncases/(ncases + ncontrols) ~ agegp)]
cancellation.mapping <- data.table(
cancellation_reasons = c("Too expensive", "Access problems", "DELETED - 3rd party request", "DELETED - Test transaction", "Trial
content too limited", "DELETED - -", "Content not matching expectations", "Great site, no time or money at
the moment,,", "Not easy to navigate the site", "Not enough updates or content", "RISK - Internal policy",
"DELETED - RISK - No login Member", "Merchant Request", "RISK - Screening - Suspicious", "RISK - Stolen
Card", "DELETED - Cancelation", "Unwanted rebill/upgrade", "RISK - reported FRAUD from merchant", "RISK -
Bulk Tx Script", "DELETED - Suspicious / Fraud", "3rd party request", "Wrong offer selected", "Chargeback",
"DELETED - Wrongly charged", "Content not matching expectations (false advertising)", "CS - cardholder
request", "Country high fraud", "DELETED - Direct chargeback threat", "DELETED - Unwanted rebill", "DELETED
- Don't like the product", "DELETED - Just moved on", "DELETED - Merchant Request", "DELETED - Unauthorized
charge", "DELETED - RISK - Stolen Card", "Risk rejection", "DELETED - CS - Fraud/it's not my membership!",
"DELETED - RISK - 3rd party request", "RISK - Retrieval", "DELETED - RISK - Screening - Suspicious", "RISK -
TC40/Safe file", "DELETED - RISK - Bulk Tx Script", "DELETED - Risk rejection", "Other Options", "Buyer's
remorse", "I do not want to renew", "Not happy with quality of content", "RISK - 3rd party request", "CS -
Suspicious", "Unwanted additional purchase (xsales, onetime shots, oneclicks, xsale upsale)", "CS -
Fraud/it's not my membership!", "Fraudulant affiliate", "DELETED - Fraud", "RISK - Stolen", "DELETED - CS -
3rd party request", "DELETED - Refund", "Test transaction", "DELETED - Billing question", "CS - Bad
customer"),
cancellation_reasons_group = c("Not happy with the cost", "Access problems", "Requested by the merchant", "Test Transaction", "Not happy
with the content", "Requested by the merchant", "Not happy with the content", "Not happy with the cost",
"Bad user experience", "Not happy with the content", "Fraud detected or Fraud prevention", "Fraud detected
or Fraud prevention", "Requested by the merchant", "Fraud detected or Fraud prevention", "Fraud detected or
Fraud prevention", "No reason given", "Purchase not recognized", "Fraud detected or Fraud prevention",
"Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention", "Requested by the merchant",
"Purchase not recognized", "Fraud detected or Fraud prevention", "Purchase not recognized", "Not happy with
the content", "No reason given", "Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention",
"Purchase not recognized", "Not happy with the content", "No reason given", "Requested by the merchant",
"Purchase not recognized", "Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention",
"Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention", "Fraud detected or Fraud
prevention", "Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention", "Fraud detected or
Fraud prevention", "Fraud detected or Fraud prevention", "No reason given", "No reason given", "No reason
given", "Not happy with the content", "Fraud detected or Fraud prevention", "Fraud detected or Fraud
prevention", "Purchase not recognized", "Fraud detected or Fraud prevention", "Fraud detected or Fraud
prevention", "Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention", "Fraud detected or
Fraud prevention", "Fraud detected or Fraud prevention", "Test transaction", "No reason given", "Fraud
detected or Fraud prevention")
)
library(data.table)
cancellation.mapping <- data.table(
cancellation_reasons = c("Too expensive", "Access problems", "DELETED - 3rd party request", "DELETED - Test transaction", "Trial
content too limited", "DELETED - -", "Content not matching expectations", "Great site, no time or money at
the moment,,", "Not easy to navigate the site", "Not enough updates or content", "RISK - Internal policy",
"DELETED - RISK - No login Member", "Merchant Request", "RISK - Screening - Suspicious", "RISK - Stolen
Card", "DELETED - Cancelation", "Unwanted rebill/upgrade", "RISK - reported FRAUD from merchant", "RISK -
Bulk Tx Script", "DELETED - Suspicious / Fraud", "3rd party request", "Wrong offer selected", "Chargeback",
"DELETED - Wrongly charged", "Content not matching expectations (false advertising)", "CS - cardholder
request", "Country high fraud", "DELETED - Direct chargeback threat", "DELETED - Unwanted rebill", "DELETED
- Don't like the product", "DELETED - Just moved on", "DELETED - Merchant Request", "DELETED - Unauthorized
charge", "DELETED - RISK - Stolen Card", "Risk rejection", "DELETED - CS - Fraud/it's not my membership!",
"DELETED - RISK - 3rd party request", "RISK - Retrieval", "DELETED - RISK - Screening - Suspicious", "RISK -
TC40/Safe file", "DELETED - RISK - Bulk Tx Script", "DELETED - Risk rejection", "Other Options", "Buyer's
remorse", "I do not want to renew", "Not happy with quality of content", "RISK - 3rd party request", "CS -
Suspicious", "Unwanted additional purchase (xsales, onetime shots, oneclicks, xsale upsale)", "CS -
Fraud/it's not my membership!", "Fraudulant affiliate", "DELETED - Fraud", "RISK - Stolen", "DELETED - CS -
3rd party request", "DELETED - Refund", "Test transaction", "DELETED - Billing question", "CS - Bad
customer"),
cancellation_reasons_group = c("Not happy with the cost", "Access problems", "Requested by the merchant", "Test Transaction", "Not happy
with the content", "Requested by the merchant", "Not happy with the content", "Not happy with the cost",
"Bad user experience", "Not happy with the content", "Fraud detected or Fraud prevention", "Fraud detected
or Fraud prevention", "Requested by the merchant", "Fraud detected or Fraud prevention", "Fraud detected or
Fraud prevention", "No reason given", "Purchase not recognized", "Fraud detected or Fraud prevention",
"Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention", "Requested by the merchant",
"Purchase not recognized", "Fraud detected or Fraud prevention", "Purchase not recognized", "Not happy with
the content", "No reason given", "Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention",
"Purchase not recognized", "Not happy with the content", "No reason given", "Requested by the merchant",
"Purchase not recognized", "Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention",
"Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention", "Fraud detected or Fraud
prevention", "Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention", "Fraud detected or
Fraud prevention", "Fraud detected or Fraud prevention", "No reason given", "No reason given", "No reason
given", "Not happy with the content", "Fraud detected or Fraud prevention", "Fraud detected or Fraud
prevention", "Purchase not recognized", "Fraud detected or Fraud prevention", "Fraud detected or Fraud
prevention", "Fraud detected or Fraud prevention", "Fraud detected or Fraud prevention", "Fraud detected or
Fraud prevention", "Fraud detected or Fraud prevention", "Test transaction", "No reason given", "Fraud
detected or Fraud prevention")
)
cancellation.mapping
dbconfiguration
prop.test(c(4851, 18154), c(129208, 478570))
prop.test(c(2922, 10827), c(336632, 1243617))
prop.test(c(58160, 232178), c(1473071, 5837043))
prop.test(c(396573, 1546079), c(4747093, 18580757))
# Packages ----------------------------------------------------------------
library(data.table)
library(gtrends)
library("gtrendsR")
library(gtrendsR)
install.packages('gtrendsR')
library(gtrendsR)
install.packages('ggplot2')
install.packages('glue')
install.packages('ggplot2')
install.packages('gtrendsR')
library(gtrendsR)
palabras_clave <- c("OT2020", "OTVuelve")
tendencias <- gtrends(palabras_clave, time = "all")
?gtrends
tendencias <- gtrends(palabras_clave, time = "now 7-d")
tendencias
as.data.table(tendencias$interest_by_city)
as.data.table(tendencias$interest_by_city)[!is.na(hits)]
as.data.table(tendencias$interest_by_city)[, table(hits)]
names(tendencias)
tendencias$related_queries
# Datos -------------------------------------------------------------------
concursantes_ot <- paste0(c('gerard', 'hugo'), c(' ot 2020'))
tendencias <- gtrends(concursantes_ot, time = "now 7-d")
# Datos -------------------------------------------------------------------
concursantes_ot <- paste0(c('gerard', 'hugo'), c(' ot2020'))
tendencias <- gtrends(concursantes_ot, time = "now 7-d")
tendencias
tendencias$interest_over_time
tendencias$interest_over_time[, table(hits)]
tendencias <- gtrends(concursantes_ot, time = "now 7-d", geo = 'ESP')
data(countries)
countries
countries <- as.data.table(countries)
countries
countries[grep('spain', name)]
countries[grep('SPAIN', name)]
tendencias <- gtrends(concursantes_ot, time = "now 7-d", geo = 'ES')
tendencias
as.data.table(tendencias$interest_over_time)
as.data.table(tendencias$interest_over_time)[, table(hits)]
as.data.table(tendencias$interest_over_time)[hits > 0,
]
# Datos -------------------------------------------------------------------
concursantes_ot <- paste0(c('Gerard', 'Hugo', 'Nia', 'Eva', 'Anaju',
'Flavio', 'Maialen', 'Samantha', 'Bruno'),
c(' ot2020'))
tendencias <- gtrends(concursantes_ot, time = "now 7-d", geo = 'ES')
# Datos -------------------------------------------------------------------
concursantes_ot <- paste0(c('Gerard', 'Hugo', 'Nia', 'Eva', 'Anaju'), c(' ot2020'))
concursantes_ot2 <- paste0(c('Flavio', 'Maialen', 'Samantha', 'Bruno', c(' ot2020'))
') '
# Datos -------------------------------------------------------------------
concursantes_ot <- paste0(c('Gerard', 'Hugo', 'Nia', 'Eva', 'Anaju'), c(' ot2020'))
concursantes_ot2 <- paste0(c('Flavio', 'Maialen', 'Samantha', 'Bruno'), c(' ot2020'))
tendencias <- gtrends(concursantes_ot, time = "now 7-d", geo = 'ES')
as.data.table(tendencias$interest_over_time)
as.data.table(tendencias$interest_over_time)[hits > 0, ]
tendencias <- gtrends('Gerard OT2020', time = "now 7-d", geo = 'ES')
tendencias
tendencias$interest_over_time
tendencias <- gtrends('Gerard', time = "now 7-d", geo = 'ES')
tendencias
tendencias <- gtrends('gerard ot 2020', time = "now 7-d", geo = 'ES')
tendencias
tendencias$interest_over_time
# Datos -------------------------------------------------------------------
concursantes <- c('gerard', 'hugo', 'nia', 'eva', 'anaju', 'flavio', 'maialen', 'samantha', 'bruno')
concursantes_dt <- rbindlist(lapply(concursantes, function(concursante) {
as.data.table(
gtrends(paste0(concursante, ' ot 2020'), time = "now 7-d", geo = 'ES')$interest_over_time
)
}))
concursantes_dt
# Graph -------------------------------------------------------------------
ggplot(concursantes_dt, aes(x = date, y = hits, color = keyword)) + geom_bar()
library(ggplot2)
# Graph -------------------------------------------------------------------
ggplot(concursantes_dt, aes(x = date, y = hits, color = keyword)) + geom_bar()
# Graph -------------------------------------------------------------------
concursantes_dt[, date_f := lubridate::ymd_hms(date)]
install.packages('lubridate')
# Graph -------------------------------------------------------------------
concursantes_dt[, date_f := lubridate::ymd_hms(date)]
ggplot(concursantes_dt, aes(x = date, y = hits, color = keyword)) + geom_bar()
ggplot(concursantes_dt, aes(x = date, y = hits, color = keyword)) + geom_bar(stat = 'identity')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) + geom_bar(stat = 'identity')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) + geom_bar(stat = 'identity', position = 'dodge') + facet_wrap(~keyword)
concursantes_dt <- rbindlist(lapply(concursantes, function(concursante) {
as.data.table(
gtrends(paste0(concursante, ' ot 2020'), time = "today 1-m", geo = 'ES')$interest_over_time
)
}))
# Graph -------------------------------------------------------------------
concursantes_dt[, date_f := lubridate::ymd_hms(date)]
# Graph -------------------------------------------------------------------
concursantes_dt[, date_f := lubridate::ymd(date)]
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword)
paleta_colores <- c('#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087', '#f95d6a', '#ff7c43', '#ffa600', '#51D231') #https://learnui.design/tools/data-color-picker.html#palette
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_color_manual(values = paleta_colores)
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores)
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw()
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.position = 'bottom')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.text = element_blank())
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.position =  'none')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.position =  'none') + xlab('Fecha') + ylab('Hits') + ggtitle('Busquedas OT2020')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.position =  'none') + xlab('Fecha') + ylab('Hits') + ggtitle('Búsquedas OT2020')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.position =  'none', title = element_text(hjust = 0.5)) +
xlab('Fecha') + ylab('Hits') + ggtitle('Búsquedas OT2020')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.position =  'none', plot.title = element_text(hjust = 0.5)) +
xlab('Fecha') + ylab('Hits') + ggtitle('Búsquedas OT2020')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.position =  'none', plot.title = element_text(hjust = 0.5, size = 2)) +
xlab('Fecha') + ylab('Hits') + ggtitle('Búsquedas OT2020')
ggplot(concursantes_dt, aes(x = date, y = hits, fill = keyword)) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_wrap(~keyword) + scale_fill_manual(values = paleta_colores) + theme_bw() +
theme(legend.position =  'none', plot.title = element_text(hjust = 0.5, size = 20)) +
xlab('Fecha') + ylab('Hits') + ggtitle('Búsquedas OT2020')
# Packages ----------------------------------------------------------------
library(data.table)
library(ggplot2)
library(plotly)
library(viridis) #https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html
google_play <- fread('googleplaystore.csv')
## Format Size
google_play[, size_num := as.numeric(gsub('[A-Za-z]', '', Size))]
## Aggregate
more_reviews_app <-google_play[order(-Reviews)][!is.na(size_num)][!duplicated(App)][1:30]
more_reviews_app[, text := paste("App: ", App,
"\nReviews Avg: ", Reviews,
"\nSize Avg: ", size_num,
"\nRating Avg: ", Rating, sep="")]
setwd("~/Desktop/graph_challenge/day_3")
# Get Data ----------------------------------------------------------------
google_play <- fread('googleplaystore.csv')
## Format Size
google_play[, size_num := as.numeric(gsub('[A-Za-z]', '', Size))]
## Aggregate
more_reviews_app <-google_play[order(-Reviews)][!is.na(size_num)][!duplicated(App)][1:30]
more_reviews_app[, text := paste("App: ", App,
"\nReviews Avg: ", Reviews,
"\nSize Avg: ", size_num,
"\nRating Avg: ", Rating, sep="")]
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Reviews, y = size_num, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
## Aggregate
more_reviews_app <-google_play[order(-Reviews)][!is.na(size_num)][!duplicated(App)][1:15]
more_reviews_app[, text := paste("App: ", App,
"\nReviews Avg: ", Reviews,
"\nSize Avg: ", size_num,
"\nRating Avg: ", Rating, sep="")]
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Reviews, y = size_num, size = log(Rating), color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Rating, y = Reviews, size = size_num, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
google_play
## Aggregate
more_reviews_app <-google_play[order(-Reviews)][!is.na(size_num)][!duplicated(App)][sample(10)]
more_reviews_app[, text := paste("App: ", App,
"\nReviews Avg: ", Reviews,
"\nSize Avg: ", size_num,
"\nRating Avg: ", Rating, sep="")]
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Rating, y = Reviews, size = size_num, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
more_reviews_app[, range(size)]
more_reviews_app[, range(size_num)]
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Rating, y = Reviews, size = size_num, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(14, 98)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Rating, y = Reviews, size = size_num, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(3,8)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Rating, y = Reviews, size = size_num, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(3,10)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
p1
?scale_size_continuous
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Rating, y = Reviews, size = size_num, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = size_num, y = Reviews, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
## Aggregate
more_reviews_app <-google_play[order(-Reviews)][!is.na(size_num)][!duplicated(App)][sample(59)]
more_reviews_app[, text := paste("App: ", App,
"\nReviews Avg: ", Reviews,
"\nSize Avg: ", size_num,
"\nRating Avg: ", Rating, sep="")]
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = size_num, y = Reviews, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Reviews, y = size_num, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
## Aggregate
more_reviews_app <-google_play[order(-Reviews)][!is.na(size_num)][!duplicated(App)][sample(25)]
more_reviews_app[, text := paste("App: ", App,
"\nReviews Avg: ", Reviews,
"\nSize Avg: ", size_num,
"\nRating Avg: ", Rating, sep="")]
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Reviews, y = size_num, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
58317958
format(38591, big.mark = '.')
# Auxiliar ----------------------------------------------------------------
comprss <- function(tx) {
div <- findInterval(as.numeric(gsub("\\,", "", tx)), c(0, 1e3, 1e6, 1e9, 1e12))  # modify this if negative numbers are possible
paste(round( as.numeric(gsub("\\,","",tx))/10^(3*(div-1)), 2), c("","K","M","B","T")[div] )
}
more_reviews_app[, text := paste("App: ", App,
"\nReviews Avg: ", comprss(Reviews),
"\nSize Avg: ", size_num,
"\nRating Avg: ", Rating, sep="")]
more_reviews_app
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Reviews, y = size_num, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none') +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Reviews, y = size_num, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F) +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 20)) +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
pp <- ggplotly(p1, tooltip="text")
pp
?scale_color_viridis
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Reviews, y = size_num, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis_c(discrete = T, guide = F) +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 20)) +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
?scale_color_viridis
# Graph -------------------------------------------------------------------
### Source: https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html
p1 <- ggplot(more_reviews_app, aes(x = Reviews, y = size_num, size = Rating, color = App, text = text)) +
geom_point(alpha = 0.7) +
scale_color_viridis(discrete = T, guide = F, option = 'A') +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 20)) +
scale_size_continuous(range = c(5,20)) +
theme_bw() + xlab('Reviews') + ylab('Size') + ggtitle('Google Play Apps')
p1
pp <- ggplotly(p1, tooltip="text")
pp
